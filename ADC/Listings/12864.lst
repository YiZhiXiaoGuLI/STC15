C51 COMPILER V9.56.0.0   12864                                                             08/10/2017 10:44:22 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE 12864
OBJECT MODULE PLACED IN .\Objects\12864.obj
COMPILER INVOKED BY: D:\Program Files (x86)\Keil_C51\C51\BIN\C51.EXE 12864.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND
                    - PRINT(.\Listings\12864.lst) TABS(2) OBJECT(.\Objects\12864.obj)

line level    source

   1          
   2          #include <12864.h>
   3          
   4          
   5          #include <intrins.h>
   6          
   7          
   8          sbit  LCD_RS = P2^5;  //定义引脚
   9          sbit  LCD_RW = P2^6;
  10          sbit  LCD_E  = P2^7;
  11          sbit  PSB    = P2^4;    //PSB脚为12864-12系列的串、并通讯功能切换，我们使用8位并行接口，PSB=1
  12          sbit  LCD_RESET = P2^3; //  17---RESET  L-->Enable
  13          #define LCD_Data P0
  14          
  15          
  16          
  17          #define Busy    0x80 //用于检测LCD状态字中的Busy标识
  18          
  19          
  20          
  21          //========================================================================
  22          // 函数: void  delay_1ms(u8 ms)
  23          // 描述: 延时函数。
  24          // 参数: ms,要延时的ms数, 这里只支持1~255ms. 自动适应主时钟.
  25          // 返回: none.
  26          // 版本: VER1.0
  27          // 日期: 2013-4-1
  28          // 备注: 
  29          //========================================================================
  30          void  delay_1ms(u16 ms)
  31          {
  32   1           u16 i;
  33   1         do{
  34   2              i = MAIN_Fosc / 13000;
  35   2            while(--i)  ;   //14T per loop
  36   2           }while(--ms);
  37   1      }
  38          
  39          
  40          
  41          //******************************************
  42          void  LCD_delay(void)
  43          {
  44   1        uchar i=15;
  45   1        while(i--)
  46   1        {
  47   2          _nop_();
  48   2        }
  49   1      }
  50          
  51          
  52          //写数据
  53          void WriteDataLCD(u8 WDLCD)
  54          {
C51 COMPILER V9.56.0.0   12864                                                             08/10/2017 10:44:22 PAGE 2   

  55   1        ReadStatusLCD(); //检测忙 
  56   1        LCD_RS = 1;
  57   1        LCD_RW = 0;
  58   1        LCD_Data = WDLCD;
  59   1          LCD_delay();
  60   1        LCD_E = 1;
  61   1        LCD_delay();
  62   1        LCD_E = 0;
  63   1      }
  64          
  65          //写指令
  66          void WriteCommandLCD(u8 WCLCD,BuysC) //BuysC为0时忽略忙检测
  67          {
  68   1        if (BuysC) ReadStatusLCD(); //根据需要检测忙 
  69   1        LCD_RS = 0;
  70   1        LCD_RW = 0; 
  71   1        LCD_Data = WCLCD;
  72   1          LCD_delay();
  73   1        LCD_E = 1; 
  74   1        LCD_delay();
  75   1        LCD_E = 0;  
  76   1      }
  77          
  78          //读状态
  79          u8 ReadStatusLCD(void)
  80          {
  81   1        LCD_Data = 0xFF; 
  82   1        LCD_RS = 0;
  83   1        LCD_RW = 1; 
  84   1          LCD_delay();
  85   1        LCD_E = 1;
  86   1          LCD_delay();
  87   1        while (LCD_Data & Busy); //检测忙信号
  88   1        LCD_E = 0;
  89   1        return(LCD_Data);
  90   1      }
  91          
  92          void LCDInit(void) //LCM初始化
  93          {
  94   1        PSB = 1;  //并口
  95   1      //  PSB = 0;  //SPI口
  96   1        delay_1ms(10);
  97   1        LCD_RESET = 0;
  98   1        delay_1ms(10);
  99   1        LCD_RESET = 1;
 100   1        delay_1ms(100);
 101   1        
 102   1        WriteCommandLCD(0x30,1); //显示模式设置,开始要求每次检测忙信号
 103   1        WriteCommandLCD(0x01,1); //显示清屏
 104   1        WriteCommandLCD(0x06,1); // 显示光标移动设置
 105   1        WriteCommandLCD(0x0C,1); // 显示开及光标设置
 106   1      }
 107          
 108          void LCDClear(void) //清屏
 109          {
 110   1        WriteCommandLCD(0x01,1); //显示清屏
 111   1        WriteCommandLCD(0x34,1); // 显示光标移动设置
 112   1        WriteCommandLCD(0x30,1); // 显示开及光标设置
 113   1      }
 114          
 115          
 116          //按指定位置显示一串字符
C51 COMPILER V9.56.0.0   12864                                                             08/10/2017 10:44:22 PAGE 3   

 117          void DisplayListChar(u8 X, u8 Y, u8 code *DData)
 118          {
 119   1        u8 ListLength,X2;
 120   1        ListLength = 0;
 121   1        X2 = X;
 122   1        if(Y < 1) Y=1;
 123   1        if(Y > 4) Y=4;
 124   1        X &= 0x0F; //限制X不能大于16，Y在1-4之内
 125   1        switch(Y)
 126   1        {
 127   2          case 1: X2 |= 0X80; break;  //根据行数来选择相应地址
 128   2          case 2: X2 |= 0X90; break;
 129   2          case 3: X2 |= 0X88; break;
 130   2          case 4: X2 |= 0X98; break;
 131   2        }
 132   1        WriteCommandLCD(X2, 1); //发送地址码
 133   1        while (DData[ListLength] >= 0x20) //若到达字串尾则退出
 134   1        {
 135   2          if (X <= 0x0F) //X坐标应小于0xF
 136   2          {
 137   3            WriteDataLCD(DData[ListLength]); //
 138   3            ListLength++;
 139   3            X++;
 140   3          }
 141   2        }
 142   1      }
 143          
 144          void DisplayListNum(u8 X, u8 Y, uchar i)
 145          {
 146   1        u8 ListLength,X2;
 147   1        ListLength = 0;
 148   1        X2 = X;
 149   1        if(Y < 1) Y=1;
 150   1        if(Y > 4) Y=4;
 151   1        X &= 0x0F; //限制X不能大于16，Y在1-4之内
 152   1        switch(Y)
 153   1        {
 154   2          case 1: X2 |= 0X80; break;  //根据行数来选择相应地址
 155   2          case 2: X2 |= 0X90; break;
 156   2          case 3: X2 |= 0X88; break;
 157   2          case 4: X2 |= 0X98; break;
 158   2        }
 159   1        WriteCommandLCD(X2, 1); //发送地址
 160   1        WriteDataLCD(i+0x30);
 161   1      }
 162          
 163          //图形显示122*32
 164          void DisplayImage (u8 code *DData)
 165          {
 166   1        u8 x,y,i;
 167   1        unsigned int tmp=0;
 168   1        for(i=0;i<9;)   //分两屏，上半屏和下半屏，因为起始地址不同，需要分开
 169   1        {
 170   2          for(x=0;x<32;x++) //32行
 171   2          {
 172   3            WriteCommandLCD(0x34,1);
 173   3            WriteCommandLCD((0x80+x),1);//列地址
 174   3            WriteCommandLCD((0x80+i),1);  //行地址，下半屏，即第三行地址0X88
 175   3            WriteCommandLCD(0x30,1);    
 176   3            for(y=0;y<16;y++) 
 177   3              WriteDataLCD(DData[tmp+y]);//读取数据写入LCD
 178   3            tmp+=16;    
C51 COMPILER V9.56.0.0   12864                                                             08/10/2017 10:44:22 PAGE 4   

 179   3          }
 180   2          i+=8;
 181   2        }
 182   1        WriteCommandLCD(0x36,1);  //扩充功能设定
 183   1        WriteCommandLCD(0x30,1);
 184   1      }
 185          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    510    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      15
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
